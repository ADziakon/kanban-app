{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\JS\\\\typescript\\\\kanban-app\\\\src\\\\components\\\\AddTaskForm\\\\AddTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../store/tasksSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title && description) {\n      dispatch(addTask({\n        id: Date.now(),\n        // Используем текущий timestamp как уникальный ID\n        title,\n        description,\n        column: 'To Do' // Новая задача будет по умолчанию в колонке \"To Do\"\n      }));\n      setTitle('');\n      setDescription('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Task description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskForm, \"gm9LX/CXXOunIhw4ITmdfGnACkU=\", false, function () {\n  return [useDispatch];\n});\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","useDispatch","addTask","jsxDEV","_jsxDEV","AddTaskForm","_s","title","setTitle","description","setDescription","dispatch","handleSubmit","e","preventDefault","id","Date","now","column","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/study/JS/typescript/kanban-app/src/components/AddTaskForm/AddTaskForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../store/tasksSlice';\n\nconst AddTaskForm: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (title && description) {\n      dispatch(addTask({\n        id: Date.now(),  // Используем текущий timestamp как уникальный ID\n        title,\n        description,\n        column: 'To Do'  // Новая задача будет по умолчанию в колонке \"To Do\"\n      }));\n      setTitle('');\n      setDescription('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Task title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        required\n      />\n      <textarea\n        placeholder=\"Task description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        required\n      />\n      <button type=\"submit\">Add Task</button>\n    </form>\n  );\n};\n\nexport default AddTaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIP,KAAK,IAAIE,WAAW,EAAE;MACxBE,QAAQ,CAACT,OAAO,CAAC;QACfa,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAG;QACjBV,KAAK;QACLE,WAAW;QACXS,MAAM,EAAE,OAAO,CAAE;MACnB,CAAC,CAAC,CAAC;MACHV,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMe,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEhB,KAAM;MACbiB,QAAQ,EAAGX,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF1B,OAAA;MACEkB,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEd,WAAY;MACnBe,QAAQ,EAAGX,CAAC,IAAKH,cAAc,CAACG,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAChDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF1B,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACxB,EAAA,CArCID,WAAqB;EAAA,QAGRJ,WAAW;AAAA;AAAA8B,EAAA,GAHxB1B,WAAqB;AAuC3B,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}