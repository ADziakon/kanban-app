{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\JS\\\\typescript\\\\kanban-app\\\\src\\\\components\\\\Board\\\\Board.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Column } from '../Column/Column';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTask } from '../../store/tasksSlice';\nimport AddTaskForm from '../AddTaskForm/AddTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const dispatch = useDispatch(); // Хук для отправки экшенов в Redux\n  const tasks = useSelector(state => state.tasks); // Хук для получения задач из состояния Redux\n\n  // Добавление тестовой задачи\n  useEffect(() => {\n    dispatch(addTask({\n      id: 1,\n      title: 'Task 1',\n      description: 'This is a test task.',\n      column: 'To Do'\n    }));\n    dispatch(addTask({\n      id: 2,\n      title: 'Task 2',\n      description: 'Another test task.',\n      column: 'In Progress'\n    }));\n  }, [dispatch]);\n\n  // Разделяем задачи по колонкам\n  const columns = ['To Do', 'In Progress', 'Done'];\n  const tasksByColumn = columns.map(column => tasks.filter(task => task.column === column));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"board-title\",\n      children: \"Kanban Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-container\",\n      children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(Column, {\n        title: column,\n        tasks: tasksByColumn[index]\n      }, column, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"V+7ELchWxtjQUcQV6jtuL3Ris1U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","Column","useDispatch","useSelector","addTask","AddTaskForm","jsxDEV","_jsxDEV","Board","_s","dispatch","tasks","state","id","title","description","column","columns","tasksByColumn","map","filter","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["D:/study/JS/typescript/kanban-app/src/components/Board/Board.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Column } from '../Column/Column';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store/store';\nimport { addTask } from '../../store/tasksSlice';\nimport AddTaskForm from '../AddTaskForm/AddTaskForm';\n\nconst Board: React.FC = () => {\n  const dispatch = useDispatch();  // Хук для отправки экшенов в Redux\n  const tasks = useSelector((state: RootState) => state.tasks);  // Хук для получения задач из состояния Redux\n\n  // Добавление тестовой задачи\n  useEffect(() => {\n    dispatch(addTask({\n      id: 1,\n      title: 'Task 1',\n      description: 'This is a test task.',\n      column: 'To Do'\n    }));\n    dispatch(addTask({\n      id: 2,\n      title: 'Task 2',\n      description: 'Another test task.',\n      column: 'In Progress'\n    }));\n  }, [dispatch]);\n\n  // Разделяем задачи по колонкам\n  const columns = ['To Do', 'In Progress', 'Done'];\n  const tasksByColumn = columns.map(column => tasks.filter(task => task.column === column));\n\n  return (\n    <div className=\"board-container\">\n      <h1 className=\"board-title\">Kanban Board</h1>\n      <AddTaskForm />\n      <div className=\"columns-container\">\n        {columns.map((column, index) => (\n          <Column key={column} title={column} tasks={tasksByColumn[index]} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAE;EACjC,MAAMS,KAAK,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAAC,CAAC,CAAE;;EAE/D;EACAX,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACN,OAAO,CAAC;MACfS,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,QAAQ;MACfC,WAAW,EAAE,sBAAsB;MACnCC,MAAM,EAAE;IACV,CAAC,CAAC,CAAC;IACHN,QAAQ,CAACN,OAAO,CAAC;MACfS,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,QAAQ;MACfC,WAAW,EAAE,oBAAoB;MACjCC,MAAM,EAAE;IACV,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMO,OAAO,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC;EAChD,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAG,CAACH,MAAM,IAAIL,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,MAAM,KAAKA,MAAM,CAAC,CAAC;EAEzF,oBACET,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhB,OAAA;MAAIe,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CpB,OAAA,CAACF,WAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfpB,OAAA;MAAKe,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BN,OAAO,CAACE,GAAG,CAAC,CAACH,MAAM,EAAEY,KAAK,kBACzBrB,OAAA,CAACN,MAAM;QAAca,KAAK,EAAEE,MAAO;QAACL,KAAK,EAAEO,aAAa,CAACU,KAAK;MAAE,GAAnDZ,MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+C,CACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCID,KAAe;EAAA,QACFN,WAAW,EACdC,WAAW;AAAA;AAAA0B,EAAA,GAFrBrB,KAAe;AAqCrB,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}